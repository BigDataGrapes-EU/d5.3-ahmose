{"version":3,"sources":["../public/data sync /.csv","../public/data/Grape Quality/features_info.csv","../public/data/Grape Quality/intervals/knowledge_intervals.csv","../public/data/Grape Quality/models_data.csv","../public/data/Grape Quality/models_info.csv","components/ModelsMatrix/ModelsMatrix.js","components/Controls/Controls.js","App.js","serviceWorker.js","index.js"],"names":["map","./Grape Quality/features_info.csv","./Grape Quality/intervals/knowledge_intervals.csv","./Grape Quality/models_data.csv","./Grape Quality/models_info.csv","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","ModelsMatrix","_ref","modelData","intervalData","featuresInfo","modelsInfo","refAnchor","useRef","_useState","useState","_useState2","slicedToArray","view","setView","useEffect","vegaEmbed","current","spec","actions","then","result","catch","console","error","chModelData","vega","changeset","remove","truthy","insert","chIntervalData","chFeaturesInfo","chModelsInfo","change","resize","run","react_default","a","createElement","ref","data_files_tree","require","reduce","dict","path","x","substring","split","splice","forEach","item","Controls","models","features","updateSelections","updateFiles","selectedProject","setSelectedProject","_useState3","_useState4","selectedIntervals","setSelectedIntervals","_useState5","_useState6","intervalDropdown","setIntervalDropdown","_useReducer","useReducer","state","newState","objectSpread","_useReducer2","modelsChecked","setModelsChecked","_useReducer3","_useReducer4","featuresChecked","setFeaturesChecked","names","d","model","res","val","length","feature","intervals","main","features_info","model_info","projectsList","concat","intervalsList","indexOf","react_select_dist_default","label","onChange","target","value","options","disabled","react_list_dist","react_list_dist_default","twoLine","dense","m","key","onClick","preventDefault","defineProperty","className","primaryText","model_label","score","secondaryText","dist_default","nativeControlId","checked","feature_label","App","files","setFiles","setModelData","setIntervalData","_useState7","_useState8","setFeaturesInfo","_useState9","_useState10","setModelsInfo","_useState11","_useState12","selectedModels","setSelectedModels","_useState13","_useState14","selectedFeatures","setSelectedFeatures","loader","Promise","all","load","_ref2","modelDataFile","intervalDataFile","featuresInfoFile","modelsInfoFile","info","read","type","parse","pop","digits","toString","labelFormatter","Intl","NumberFormat","minimumIntegerDigits","scoreFormatter","maximumFractionDigits","minimumFractionDigits","sort","b","i","format","intervalDataRead","modelDataRead","filter","find","x1","x2","agree","y1","expected_value","y2","fModelData","useMemo","includes","react_top_app_bar_dist_default","title","react_top_app_bar_dist","react_drawer_dist_default","components_Controls_Controls","modelsList","featureList","react_drawer_dist","components_ModelsMatrix_ModelsMatrix","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67fa07b9.chunk.js","sourcesContent":["var map = {\n\t\"./Grape Quality/features_info.csv\": 58,\n\t\"./Grape Quality/intervals/knowledge_intervals.csv\": 59,\n\t\"./Grape Quality/models_data.csv\": 60,\n\t\"./Grape Quality/models_info.csv\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 57;","module.exports = __webpack_public_path__ + \"static/media/features_info.dae26627.csv\";","module.exports = __webpack_public_path__ + \"static/media/knowledge_intervals.44562cb2.csv\";","module.exports = __webpack_public_path__ + \"static/media/models_data.c93eb794.csv\";","module.exports = __webpack_public_path__ + \"static/media/models_info.115c9efd.csv\";","import React, { useState, useEffect, useRef } from \"react\";\nimport vegaEmbed, { vega } from \"vega-embed\";\nimport spec from \"./spec.vg.json\";\n\nconst ModelsMatrix = ({\n  modelData,\n  intervalData,\n  featuresInfo,\n  modelsInfo\n}) => {\n  const refAnchor = useRef();\n  const [view, setView] = useState(null);\n\n  useEffect(() => {\n    vegaEmbed(refAnchor.current, spec, { actions: false })\n      .then(result => setView(result.view))\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    if (view) {\n      const chModelData = vega\n        .changeset()\n        .remove(vega.truthy)\n        .insert(modelData);\n      const chIntervalData = vega\n        .changeset()\n        .remove(vega.truthy)\n        .insert(intervalData);\n      const chFeaturesInfo = vega\n        .changeset()\n        .remove(vega.truthy)\n        .insert(featuresInfo);\n      const chModelsInfo = vega\n        .changeset()\n        .remove(vega.truthy)\n        .insert(modelsInfo);\n      view\n        .change(\"intervalData\", chIntervalData)\n        .change(\"featuresInfo\", chFeaturesInfo)\n        .change(\"modelsInfo\", chModelsInfo)\n        .change(\"modelData\", chModelData)\n        .resize()\n        .run();\n    }\n  }, [view, modelData, intervalData, featuresInfo]);\n\n  return <div ref={refAnchor} id=\"vis\" />;\n};\n\nexport default ModelsMatrix;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport Checkbox from \"@material/react-checkbox\";\nimport Select from \"@material/react-select\";\nimport List, {\n  ListItem,\n  ListGroup,\n  ListGroupSubheader,\n  ListDivider,\n  ListItemText\n} from \"@material/react-list\";\n\nimport \"@material/react-checkbox/dist/checkbox.min.css\";\nimport \"@material/react-select/dist/select.min.css\";\nimport \"@material/react-list/dist/list.min.css\";\nimport \"./Controls.css\";\n\nvar files_in_data = require\n  .context(\"../../../public/data\", true, /\\.csv/)\n  .keys();\n\nvar data_files_tree = files_in_data.reduce(function(dict, path) {\n  var x = dict;\n  path = path.substring(1);\n  path\n    .split(\"/\")\n    .splice(1)\n    .forEach(function(item) {\n      if (!x[item]) {\n        x[item] = {};\n      }\n      x = x[item];\n    });\n  x.path = path;\n  return dict;\n}, {});\n\nconst Controls = ({ models, features, updateSelections, updateFiles }) => {\n  const [selectedProject, setSelectedProject] = useState(\"\");\n  const [selectedIntervals, setSelectedIntervals] = useState(\"\");\n  const [intervalDropdown, setIntervalDropdown] = useState(false);\n\n  const [modelsChecked, setModelsChecked] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  );\n  const [featuresChecked, setFeaturesChecked] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  );\n\n  // Check 2 by default\n  useEffect(() => {\n    const num = 2;\n    const names = models.map(d => d.model);\n    setModelsChecked(\n      names.reduce((res, val) => {\n        res[val] = Object.keys(res).length < num;\n        return res;\n      }, {})\n    );\n  }, [models]);\n\n  // Check all by default\n  useEffect(() => {\n    const names = features.map(d => d.feature);\n    setFeaturesChecked(\n      names.reduce((res, val) => {\n        res[val] = true;\n        return res;\n      }, {})\n    );\n  }, [features]);\n\n  //Update selected models\n  useEffect(() => {\n    updateSelections(modelsChecked, featuresChecked);\n  }, [modelsChecked, featuresChecked]);\n\n  useEffect(() => {\n    setSelectedIntervals(\"\");\n    if (selectedProject === \"\") {\n      setIntervalDropdown(false);\n    } else setIntervalDropdown(true);\n  }, [selectedProject]);\n\n  useEffect(() => {\n    if (intervalDropdown) {\n      let intervals = \"\";\n      const main = data_files_tree[selectedProject];\n      if (selectedIntervals && selectedIntervals !== \"**No Intervals**\")\n        intervals =\n          \"data\" + main[\"intervals\"][selectedIntervals + \".csv\"][\"path\"];\n      updateFiles({\n        intervals: intervals,\n        models: \"data\" + main[\"models_data.csv\"][\"path\"],\n        features_info: \"data\" + main[\"features_info.csv\"][\"path\"],\n        model_info: \"data\" + main[\"models_info.csv\"][\"path\"]\n      });\n    } else {\n      updateFiles(null);\n    }\n  }, [selectedIntervals]);\n\n  const projectsList = [\"\"].concat(Object.keys(data_files_tree));\n  let intervalsList = selectedProject\n    ? Object.keys(data_files_tree[selectedProject][\"intervals\"])\n    : [];\n\n  intervalsList = intervalsList.map(d => d.substring(0, d.indexOf(\".csv\")));\n  return (\n    <div>\n      <Select\n        label=\"Select Project\"\n        onChange={e => setSelectedProject(e.target.value)}\n        value={selectedProject}\n        options={projectsList}\n      />\n      <Select\n        disabled={!intervalDropdown}\n        label=\"Select Intervals\"\n        onChange={e => setSelectedIntervals(e.target.value)}\n        value={selectedIntervals}\n        options={[\"\", \"**No Intervals**\"].concat(intervalsList)}\n      />\n      <ListGroup>\n        <ListGroupSubheader>Models</ListGroupSubheader>\n        <List twoLine dense>\n          {models.map(m => (\n            <ListItem\n              key={m.model}\n              onClick={e => {\n                e.preventDefault();\n                setModelsChecked({ [m.model]: !modelsChecked[m.model] });\n              }}\n            >\n              <ListItemText\n                className=\"checkbox\"\n                primaryText={m.model_label + \" \" + m.score}\n                secondaryText={m.model}\n              />\n              <Checkbox\n                nativeControlId={m.model}\n                checked={modelsChecked[m.model]}\n                onChange={() =>\n                  setModelsChecked({ [m.model]: !modelsChecked[m.model] })\n                }\n              />\n            </ListItem>\n          ))}\n          <ListDivider />\n        </List>\n        <ListGroupSubheader>Features</ListGroupSubheader>\n        <List twoLine dense>\n          {features.map(m => (\n            <ListItem\n              key={m.feature}\n              onClick={e => {\n                e.preventDefault();\n                setFeaturesChecked({\n                  [m.feature]: !featuresChecked[m.feature]\n                });\n              }}\n            >\n              <ListItemText\n                className=\"checkbox\"\n                primaryText={m.feature_label}\n                secondaryText={m.feature}\n              />\n              <Checkbox\n                nativeControlId={m.feature}\n                checked={featuresChecked[m.feature]}\n                onChange={() =>\n                  setFeaturesChecked({\n                    [m.feature]: !featuresChecked[m.feature]\n                  })\n                }\n              />\n            </ListItem>\n          ))}\n          <ListDivider />\n        </List>\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { vega } from \"vega-embed\";\nimport ModelsMatrix from \"./components/ModelsMatrix\";\nimport Controls from \"./components/Controls\";\n\n//Material Components\nimport TopAppBar, { TopAppBarFixedAdjust } from \"@material/react-top-app-bar\";\nimport Drawer, { DrawerAppContent } from \"@material/react-drawer\";\n\n//Material CSS Files\nimport \"@material/react-top-app-bar/dist/top-app-bar.min.css\";\nimport \"@material/react-drawer/dist/drawer.min.css\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [files, setFiles] = useState(null);\n  const [modelData, setModelData] = useState([]);\n  const [intervalData, setIntervalData] = useState([]);\n  const [featuresInfo, setFeaturesInfo] = useState([]);\n  const [modelsInfo, setModelsInfo] = useState([]);\n\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [selectedFeatures, setSelectedFeatures] = useState([]);\n\n  // Load data\n  useEffect(() => {\n    if (!files) {\n      setModelData([]);\n      setIntervalData([]);\n      setFeaturesInfo([]);\n      setModelsInfo([]);\n    } else {\n      var loader = vega.loader();\n      Promise.all([\n        loader.load(files.models),\n        loader.load(files.intervals),\n        loader.load(files.features_info),\n        loader.load(files.model_info)\n      ])\n        .then(\n          ([\n            modelDataFile,\n            intervalDataFile,\n            featuresInfoFile,\n            modelsInfoFile\n          ]) => {\n            // Generate Model alias and format score\n            let info = vega.read(modelsInfoFile, {\n              type: \"csv\",\n              parse: \"auto\"\n            });\n\n            const score = Object.keys(info[0]).pop(\"model\");\n            const digits = info.length.toString().length;\n            const labelFormatter = new Intl.NumberFormat(\"en-EN\", {\n              minimumIntegerDigits: digits\n            });\n            const scoreFormatter = new Intl.NumberFormat(\"en-EN\", {\n              maximumFractionDigits: 3,\n              minimumFractionDigits: 3\n            });\n            info = info.sort((a, b) => a[score] - b[score]);\n            info = info.map((d, i) => ({\n              model: d.model,\n              model_label: \"M\" + labelFormatter.format(i),\n              score: `(${score}: ${scoreFormatter.format(d[score])})`\n            }));\n\n            // Generate agreement between model and intervals\n            const intervalDataRead = vega.read(intervalDataFile, {\n              type: \"csv\",\n              parse: \"auto\"\n            });\n            const modelDataRead = vega.read(modelDataFile, {\n              type: \"csv\",\n              parse: \"auto\"\n            });\n\n            const gen_agree = d => {\n              const i = intervalDataRead\n                .filter(i => i.feature === d.feature)\n                .find(i => {\n                  return +i.x1 <= +d.value && +d.value <= +i.x2;\n                });\n\n              let label = null;\n              let agree = null;\n              if (i) {\n                label = i.label;\n                agree = +(\n                  +i.y1 <= +d.expected_value && +d.expected_value <= +i.y2\n                );\n              }\n\n              return {\n                ...d,\n                label,\n                agree\n              };\n            };\n\n            setModelData(modelDataRead.map(gen_agree));\n            setModelsInfo(info);\n            setIntervalData(intervalDataRead);\n            setFeaturesInfo(\n              vega.read(featuresInfoFile, { type: \"csv\", parse: \"auto\" })\n            );\n          }\n        )\n        .catch(console.error);\n    }\n  }, [files]);\n\n  const fModelData = useMemo(() => {\n    if (!selectedModels.length || !selectedFeatures.length) return [];\n    return modelData.filter(d => {\n      return (\n        selectedModels.includes(d.model) && selectedFeatures.includes(d.feature)\n      );\n    });\n  }, [selectedModels, selectedFeatures]);\n\n  const updateSelections = (models, features) => {\n    const modelsList = Object.keys(models).filter(function(e) {\n      return models[e];\n    });\n    const featureList = Object.keys(features).filter(function(e) {\n      return features[e];\n    });\n    setSelectedModels(modelsList);\n    setSelectedFeatures(featureList);\n  };\n\n  return (\n    <div className=\"drawer-container\">\n      <TopAppBar title=\"AHMOSE: Augmented by Human Model Selection\" />\n      <TopAppBarFixedAdjust className=\"top-app-bar-fix-adjust\">\n        <Drawer className=\"drawer\">\n          <Controls\n            models={modelsInfo}\n            features={featuresInfo}\n            updateSelections={updateSelections}\n            updateFiles={setFiles}\n          />\n        </Drawer>\n        <DrawerAppContent className=\"drawer-app-content\">\n          {fModelData.length ? (\n            <ModelsMatrix\n              modelData={fModelData}\n              intervalData={intervalData}\n              featuresInfo={featuresInfo}\n              modelsInfo={modelsInfo}\n            />\n          ) : null}\n        </DrawerAppContent>\n      </TopAppBarFixedAdjust>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}